class ChargesController < ApplicationController
	before_action :authenticate_user!
	def new
		@cart = current_user.cart
		
		@amount = @cart.total_price
	end

	def create
	  @cart = current_user.cart
	  # .to_i to avoid the bug generated by the decimal
	  @amount = @cart.total_price.to_i

	  customer = Stripe::Customer.create({
	  	email: params[:stripeEmail],
	  	source: params[:stripeToken],
	  })

	  charge = Stripe::Charge.create({
	  	customer: customer.id,
	  	amount: @amount * 100,
	  	description: 'Rails Stripe customer',
	  	currency: 'eur',
	  })

		# We stock the cart's items in a variable
		@cart_products = @cart.products

		# We create a new order
		@command = Command.create(stripe_customer_id: customer.id, customer_id: current_user.id)

		# Each item of this card is put in the order item table (with the id of the current order)
		@cart_products.each do |cart_product|
			CommandProduct.create(command_id: @command.id, product_id: product.id)
		end


		# we empty the cart
		CartProduct.where(cart_id: @cart.id).each do |entry|
			entry.destroy
		end

		redirect_to user_path(current_user.id)
		flash[:success] = "Votre commande est faite"

		rescue Stripe::CardError => e
			flash[:error] = e.message
			redirect_to new_charge_path
		end
end
